<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.welldo</groupId>
    <artifactId>java-web-study</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- 注意，这里是war包   -->
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <java.version>8</java.version>

        <!--引入tomcat所有jar包-->
        <tomcat.version>9.0.26</tomcat.version>
    </properties>

    <dependencies>
        <!--不再需要servlet，因为引入Tomcat依赖后自动引入了Servlet API-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.0</version>
            <!--表示编译时使用，但不会打包到.war文件中，因为运行期Web服务器本身已经提供了Servlet API相关的jar包。-->
            <scope>provided</scope>
        </dependency>

        <!--引入tomcat所有jar包-->
        <!--注意：引入的Tomcat的scope为provided，
        在Idea下运行时，需要设置Run/Debug Configurations，选择Application - Main，钩上Include dependencies with "Provided" scope，
        这样才能让Idea在运行时把Tomcat相关依赖包自动添加到classpath中。-->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- 这个名字，决定了要生成的war包的名字，也是访问的路径 -->
        <!--http://localhost:8080/hello/-->
        <finalName>hello</finalName>
    </build>

</project>